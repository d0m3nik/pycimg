name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - feature_pybind
  release:
    types:
      - published

env:
  CIBW_TEST_REQUIRES: pytest
  CIBW_TEST_COMMAND: pytest {project}/tests/test_constructors.py

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15] #[ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.7.1

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      - name: Symlink g++-4.2 on MacOS
        if: runner.os == 'macOS'
        run: |
          ln -s /usr/bin/g++ /usr/local/bin/g++-4.2

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: pip install cmake && ln -s $(which cmake) /usr/local/bin/cmake
          CIBW_BEFORE_ALL_MACOS: brew install --cask xquartz 
          CIBW_BEFORE_BUILD: pip install -r requirements.txt && python install_conan_packages.py
          CIBW_SKIP: cp27-* pp* *-win32 *-manylinux_i686 *aarch64 *ppc64* *s390*

      - name: Start SSH via Ngrok
        if: ${{ failure() }}
        uses: luchihoratiu/debug-via-ssh@main
        with:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_TOKEN }}
          SSH_PASS: ${{ secrets.SSH_PASS }}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/