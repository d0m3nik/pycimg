image: Visual Studio 2015

platform:
  - x64

environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    #    - PYTHON: "C:\\Python27"
    #    - PYTHON: "C:\\Python33"
    #    - PYTHON: "C:\\Python34"
    #    - PYTHON: "C:\\Python35"
    #    - PYTHON: "C:\\Python27-x64"
    #    - PYTHON: "C:\\Python33-x64"
    #  DISTUTILS_USE_SDK: "1"
    #- PYTHON: "C:\\Python34-x64"
    #  DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"

install:
  # Update submodules
  - "git submodule update --init --recursive"
  # Install yasm for building libjpeg-turbo
  - mkdir c:\yasm
  - set PATH=c:\yasm;%PATH%
  - curl -o "c:\yasm\yasm.exe" http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe
  - yasm --version
  # Python packages for building and test
  - "%PYTHON%\\python.exe -m pip install -r requirements_dev.txt"

build_script: #off
  # Build thirdparty libs and bdist_wheel 
  - "build.bat"

test_script:
  - mkdir test-reports
  - mkdir cover
  - "%PYTHON%\\python.exe setup.py nosetests"

  # after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  #  - "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

